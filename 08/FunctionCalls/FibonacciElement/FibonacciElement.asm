@256
D=A
@SP
M=D
//0 write call
@CALL0
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(CALL0)
//
//11 write function
(Main.fibonacci)
//
//12 C_Push
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//
//13 C_Push
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//
//14 lt
@SP
AM=M-1
D=M
A=A-1
D=M-D
@If_True0
D;JLT
@Else0
0;JMP
(If_True0)
@SP
A=M-1
M=-1
@End0
0;JMP
(Else0)
@SP
A=M-1
M=0
(End0)
//
//15 if goto
@SP
AM=M-1
D=M
@Main.fibonacci$IF_TRUE
D;JNE
//
//16 goto
@Main.fibonacci$IF_FALSE
0;JMP
//
//17 label
(Main.fibonacci$IF_TRUE)
//
//18 C_Push
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//
//19 write return
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
D=M
A=D-1
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//
//20 label
(Main.fibonacci$IF_FALSE)
//
//21 C_Push
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//
//22 C_Push
@2
D=A
@SP
A=M
M=D
@SP
M=M+1
//
//23 sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//
//24 write call
@CALL1
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(CALL1)
//
//25 C_Push
@0
D=A
@ARG
A=M+D
D=M
@SP
A=M
M=D
@SP
M=M+1
//
//26 C_Push
@1
D=A
@SP
A=M
M=D
@SP
M=M+1
//
//27 sub
@SP
AM=M-1
D=M
A=A-1
M=M-D
//
//28 write call
@CALL2
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(CALL2)
//
//29 add
@SP
AM=M-1
D=M
A=A-1
M=M+D
//
//30 write return
@LCL
D=M
@R13
M=D
@5
A=D-A
D=M
@R14
M=D
@SP
A=M-1
D=M
@ARG
A=M
M=D
@ARG
D=M
@SP
M=D+1
@R13
D=M
A=D-1
D=M
@THAT
M=D
@R13
D=M
@2
A=D-A
D=M
@THIS
M=D
@R13
D=M
@3
A=D-A
D=M
@ARG
M=D
@R13
D=M
@4
A=D-A
D=M
@LCL
M=D
@R14
A=M
0;JMP
//
@256
D=A
@SP
M=D
//0 write call
@CALL3
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@0
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Sys.init
0;JMP
(CALL3)
//
//11 write function
(Sys.init)
//
//12 C_Push
@4
D=A
@SP
A=M
M=D
@SP
M=M+1
//
//13 write call
@CALL4
D=A
@SP
A=M
M=D
@SP
M=M+1
@LCL
D=M
@SP
A=M
M=D
@SP
M=M+1
@ARG
D=M
@SP
A=M
M=D
@SP
M=M+1
@THIS
D=M
@SP
A=M
M=D
@SP
M=M+1
@THAT
D=M
@SP
A=M
M=D
@SP
M=M+1
@SP
D=M
@1
D=D-A
@5
D=D-A
@ARG
M=D
@SP
D=M
@LCL
M=D
@Main.fibonacci
0;JMP
(CALL4)
//
//14 label
(Sys.init$WHILE)
//
//15 goto
@Sys.init$WHILE
0;JMP
//
(END)
@END
0;JMP
